{"ast":null,"code":"import { WALLET_SUBMIT, ADD_EXPENSE, REMOVE_EXPENSE, INITIAL_EDIT, EDIT_EXPENSE } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0\n};\nconst filtredArray = (state, action) => state.expenses.map(item => {\n  if (item.id === state.idToEdit) {\n    return {\n      id: item.id,\n      value: action.payload.value,\n      description: action.payload.description,\n      currency: action.payload.currency,\n      method: action.payload.method,\n      tag: action.payload.tag\n      // exchangeRates: item.exchangeRates,\n    };\n  }\n\n  return item;\n});\nconst wallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case WALLET_SUBMIT:\n      return {\n        ...state,\n        currencies: action.payload.currencies\n      };\n    case ADD_EXPENSE:\n      return {\n        ...state,\n        expenses: [...state.expenses, {\n          id: state.expenses.length,\n          value: action.payload.value,\n          description: action.payload.description,\n          currency: action.payload.currency,\n          method: action.payload.method,\n          tag: action.payload.tag,\n          exchangeRates: action.payload.exchangeRates\n        }]\n      };\n    case REMOVE_EXPENSE:\n      return {\n        ...state,\n        expenses: state.expenses.filter(item => item.id !== action.payload.id)\n      };\n    case INITIAL_EDIT:\n      return {\n        ...state,\n        editor: true,\n        idToEdit: action.payload.id\n      };\n    case EDIT_EXPENSE:\n      return {\n        ...state,\n        expenses: filtredArray(state, action),\n        editor: false\n      };\n    default:\n      return state;\n  }\n};\nexport default wallet;","map":{"version":3,"names":["WALLET_SUBMIT","ADD_EXPENSE","REMOVE_EXPENSE","INITIAL_EDIT","EDIT_EXPENSE","INITIAL_STATE","currencies","expenses","editor","idToEdit","filtredArray","state","action","map","item","id","value","payload","description","currency","method","tag","wallet","type","length","exchangeRates","filter"],"sources":["/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["import {\n  WALLET_SUBMIT,\n  ADD_EXPENSE,\n  REMOVE_EXPENSE,\n  INITIAL_EDIT,\n  EDIT_EXPENSE,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n};\n\nconst filtredArray = (state, action) => state.expenses.map((item) => {\n  if (item.id === state.idToEdit) {\n    return {\n      id: item.id,\n      value: action.payload.value,\n      description: action.payload.description,\n      currency: action.payload.currency,\n      method: action.payload.method,\n      tag: action.payload.tag,\n      // exchangeRates: item.exchangeRates,\n    };\n  }\n  return item;\n});\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case WALLET_SUBMIT:\n    return {\n      ...state,\n      currencies: action.payload.currencies,\n    };\n  case ADD_EXPENSE:\n    return {\n      ...state,\n      expenses: [...state.expenses, {\n        id: state.expenses.length,\n        value: action.payload.value,\n        description: action.payload.description,\n        currency: action.payload.currency,\n        method: action.payload.method,\n        tag: action.payload.tag,\n        exchangeRates: action.payload.exchangeRates,\n      }],\n    };\n  case REMOVE_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.filter((item) => item.id !== action.payload.id),\n    };\n  case INITIAL_EDIT:\n    return {\n      ...state,\n      editor: true,\n      idToEdit: action.payload.id,\n    };\n  case EDIT_EXPENSE:\n    return {\n      ...state,\n      expenses: filtredArray(state, action),\n      editor: false,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"],"mappings":"AAAA,SACEA,aAAa,EACbC,WAAW,EACXC,cAAc,EACdC,YAAY,EACZC,YAAY,QACP,YAAY;AAEnB,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EAAE;EACdC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,KAAK;EACbC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,YAAY,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAKD,KAAK,CAACJ,QAAQ,CAACM,GAAG,CAAEC,IAAI,IAAK;EACnE,IAAIA,IAAI,CAACC,EAAE,KAAKJ,KAAK,CAACF,QAAQ,EAAE;IAC9B,OAAO;MACLM,EAAE,EAAED,IAAI,CAACC,EAAE;MACXC,KAAK,EAAEJ,MAAM,CAACK,OAAO,CAACD,KAAK;MAC3BE,WAAW,EAAEN,MAAM,CAACK,OAAO,CAACC,WAAW;MACvCC,QAAQ,EAAEP,MAAM,CAACK,OAAO,CAACE,QAAQ;MACjCC,MAAM,EAAER,MAAM,CAACK,OAAO,CAACG,MAAM;MAC7BC,GAAG,EAAET,MAAM,CAACK,OAAO,CAACI;MACpB;IACF,CAAC;EACH;;EACA,OAAOP,IAAI;AACb,CAAC,CAAC;AAEF,MAAMQ,MAAM,GAAG,YAAmC;EAAA,IAAlCX,KAAK,uEAAGN,aAAa;EAAA,IAAEO,MAAM;EAC3C,QAAQA,MAAM,CAACW,IAAI;IACnB,KAAKvB,aAAa;MAChB,OAAO;QACL,GAAGW,KAAK;QACRL,UAAU,EAAEM,MAAM,CAACK,OAAO,CAACX;MAC7B,CAAC;IACH,KAAKL,WAAW;MACd,OAAO;QACL,GAAGU,KAAK;QACRJ,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAQ,EAAE;UAC5BQ,EAAE,EAAEJ,KAAK,CAACJ,QAAQ,CAACiB,MAAM;UACzBR,KAAK,EAAEJ,MAAM,CAACK,OAAO,CAACD,KAAK;UAC3BE,WAAW,EAAEN,MAAM,CAACK,OAAO,CAACC,WAAW;UACvCC,QAAQ,EAAEP,MAAM,CAACK,OAAO,CAACE,QAAQ;UACjCC,MAAM,EAAER,MAAM,CAACK,OAAO,CAACG,MAAM;UAC7BC,GAAG,EAAET,MAAM,CAACK,OAAO,CAACI,GAAG;UACvBI,aAAa,EAAEb,MAAM,CAACK,OAAO,CAACQ;QAChC,CAAC;MACH,CAAC;IACH,KAAKvB,cAAc;MACjB,OAAO;QACL,GAAGS,KAAK;QACRJ,QAAQ,EAAEI,KAAK,CAACJ,QAAQ,CAACmB,MAAM,CAAEZ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKH,MAAM,CAACK,OAAO,CAACF,EAAE;MACzE,CAAC;IACH,KAAKZ,YAAY;MACf,OAAO;QACL,GAAGQ,KAAK;QACRH,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAEG,MAAM,CAACK,OAAO,CAACF;MAC3B,CAAC;IACH,KAAKX,YAAY;MACf,OAAO;QACL,GAAGO,KAAK;QACRJ,QAAQ,EAAEG,YAAY,CAACC,KAAK,EAAEC,MAAM,CAAC;QACrCJ,MAAM,EAAE;MACV,CAAC;IACH;MACE,OAAOG,KAAK;EAAC;AAEjB,CAAC;AAED,eAAeW,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { GET_CURRENCIES } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: []\n};\nconst wallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_CURRENCIES:\n      return {\n        ...state,\n        currencies: action.payload.currencies\n      };\n    default:\n      return state;\n  }\n};\nexport default wallet;","map":{"version":3,"names":["GET_CURRENCIES","INITIAL_STATE","currencies","expenses","wallet","state","action","type","payload"],"sources":["/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["import { GET_CURRENCIES } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.payload.currencies,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,YAAY;AAE3C,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EAAE;EACdC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,MAAM,GAAG,YAAmC;EAAA,IAAlCC,KAAK,uEAAGJ,aAAa;EAAA,IAAEK,MAAM;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACnB,KAAKP,cAAc;MACjB,OAAO;QACL,GAAGK,KAAK;QACRH,UAAU,EAAEI,MAAM,CAACE,OAAO,CAACN;MAC7B,CAAC;IACH;MACE,OAAOG,KAAK;EAAC;AAEjB,CAAC;AAED,eAAeD,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
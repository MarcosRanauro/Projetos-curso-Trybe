{"ast":null,"code":"var _jsxFileName = \"/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-recipes-app/src/pages/RecipeInProgress.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeInProgress() {\n  _s();\n  const [ingredients, setIngredients] = useState([]);\n  useEffect(() => {\n    fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=').then(response => response.json()).then(data => {\n      // Extrai a lista de ingredientes da primeira receita retornada pela API\n      const recipeIngredients = data.meals[0].strIngredient.map(ingredient => ({\n        name: ingredient,\n        checked: false\n      }));\n      setIngredients(recipeIngredients);\n    });\n  }, []);\n  const handleIngredientChange = index => {\n    // Cria uma cópia da lista de ingredientes para atualizar o estado\n    const newIngredients = [...ingredients];\n    // Inverte o valor da propriedade checked do ingrediente selecionado\n    newIngredients[index].checked = !newIngredients[index].checked;\n    setIngredients(newIngredients);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"\",\n      alt: \"\",\n      \"data-testid\": \"recipe-photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      children: \"RecipeInProgress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"compartilhar\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"share-btn\",\n        name: \"compartilhar\",\n        children: \"compartilhar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"favorite\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"favorite-btn\",\n        name: \"favorite\",\n        children: \"favoritar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        \"data-testid\": \"recipe-category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `${index}-ingredient-step`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: `${index}-ingredient-step`,\n        \"data-testid\": `${index}-ingredient-step`,\n        checked: ingredient.checked,\n        onChange: () => handleIngredientChange(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), ingredient.name]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"finish\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"finish-recipe-btn\",\n        name: \"finish\",\n        type: \"button\",\n        children: \"finalizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeInProgress, \"uMtY1mJVgguGfhq6h4p5o8ejUzk=\");\n_c = RecipeInProgress;\nexport default RecipeInProgress;\nvar _c;\n$RefreshReg$(_c, \"RecipeInProgress\");","map":{"version":3,"names":["React","useState","useEffect","RecipeInProgress","ingredients","setIngredients","fetch","then","response","json","data","recipeIngredients","meals","strIngredient","map","ingredient","name","checked","handleIngredientChange","index","newIngredients"],"sources":["/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-recipes-app/src/pages/RecipeInProgress.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction RecipeInProgress() {\n  const [ingredients, setIngredients] = useState([]);\n\n  useEffect(() => {\n    fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n      .then((response) => response.json())\n      .then((data) => {\n        // Extrai a lista de ingredientes da primeira receita retornada pela API\n        const recipeIngredients = data.meals[0].strIngredient.map((ingredient) => ({\n          name: ingredient,\n          checked: false,\n        }));\n        setIngredients(recipeIngredients);\n      });\n  }, []);\n\n  const handleIngredientChange = (index) => {\n    // Cria uma cópia da lista de ingredientes para atualizar o estado\n    const newIngredients = [...ingredients];\n    // Inverte o valor da propriedade checked do ingrediente selecionado\n    newIngredients[index].checked = !newIngredients[index].checked;\n    setIngredients(newIngredients);\n  };\n\n  return (\n    <div>\n      <img src=\"\" alt=\"\" data-testid=\"recipe-photo\" />\n      <h1 data-testid=\"recipe-title\">RecipeInProgress</h1>\n      <label htmlFor=\"compartilhar\">\n        <button data-testid=\"share-btn\" name=\"compartilhar\">\n          compartilhar\n        </button>\n      </label>\n      <label htmlFor=\"favorite\">\n        <button data-testid=\"favorite-btn\" name=\"favorite\">\n          favoritar\n        </button>\n      </label>\n      <label htmlFor=\"\">\n        <input type=\"text\" data-testid=\"recipe-category\" />\n      </label>\n\n      <p data-testid=\"instructions\" />\n\n      {ingredients.map((ingredient, index) => (\n        <label key={ index } htmlFor={ `${index}-ingredient-step` }>\n          <input\n            type=\"checkbox\"\n            id={ `${index}-ingredient-step` }\n            data-testid={ `${index}-ingredient-step` }\n            checked={ ingredient.checked }\n            onChange={ () => handleIngredientChange(index) }\n          />\n          {ingredient.name}\n        </label>\n      ))}\n\n      <label htmlFor=\"finish\">\n        <button data-testid=\"finish-recipe-btn\" name=\"finish\" type=\"button\">\n          finalizar\n        </button>\n      </label>\n    </div>\n  );\n}\n\nexport default RecipeInProgress;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,SAASC,gBAAgB,GAAG;EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdI,KAAK,CAAC,uDAAuD,CAAC,CAC3DC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACA,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAACC,aAAa,CAACC,GAAG,CAAEC,UAAU,KAAM;QACzEC,IAAI,EAAED,UAAU;QAChBE,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;MACHZ,cAAc,CAACM,iBAAiB,CAAC;IACnC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,sBAAsB,GAAIC,KAAK,IAAK;IACxC;IACA,MAAMC,cAAc,GAAG,CAAC,GAAGhB,WAAW,CAAC;IACvC;IACAgB,cAAc,CAACD,KAAK,CAAC,CAACF,OAAO,GAAG,CAACG,cAAc,CAACD,KAAK,CAAC,CAACF,OAAO;IAC9DZ,cAAc,CAACe,cAAc,CAAC;EAChC,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,GAAG,EAAC,EAAE;MAAC,GAAG,EAAC,EAAE;MAAC,eAAY;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAChD;MAAI,eAAY,cAAc;MAAA,UAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAK,eACpD;MAAO,OAAO,EAAC,cAAc;MAAA,uBAC3B;QAAQ,eAAY,WAAW;QAAC,IAAI,EAAC,cAAc;QAAA,UAAC;MAEpD;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACH,eACR;MAAO,OAAO,EAAC,UAAU;MAAA,uBACvB;QAAQ,eAAY,cAAc;QAAC,IAAI,EAAC,UAAU;QAAA,UAAC;MAEnD;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACH,eACR;MAAO,OAAO,EAAC,EAAE;MAAA,uBACf;QAAO,IAAI,EAAC,MAAM;QAAC,eAAY;MAAiB;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC7C,eAER;MAAG,eAAY;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,EAE/BhB,WAAW,CAACU,GAAG,CAAC,CAACC,UAAU,EAAEI,KAAK,kBACjC;MAAqB,OAAO,EAAI,GAAEA,KAAM,kBAAmB;MAAA,wBACzD;QACE,IAAI,EAAC,UAAU;QACf,EAAE,EAAI,GAAEA,KAAM,kBAAmB;QACjC,eAAe,GAAEA,KAAM,kBAAmB;QAC1C,OAAO,EAAGJ,UAAU,CAACE,OAAS;QAC9B,QAAQ,EAAG,MAAMC,sBAAsB,CAACC,KAAK;MAAG;QAAA;QAAA;QAAA;MAAA,QAChD,EACDJ,UAAU,CAACC,IAAI;IAAA,GARLG,KAAK;MAAA;MAAA;MAAA;IAAA,QAUnB,CAAC,eAEF;MAAO,OAAO,EAAC,QAAQ;MAAA,uBACrB;QAAQ,eAAY,mBAAmB;QAAC,IAAI,EAAC,QAAQ;QAAC,IAAI,EAAC,QAAQ;QAAA,UAAC;MAEpE;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GAhEQhB,gBAAgB;AAAA,KAAhBA,gBAAgB;AAkEzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
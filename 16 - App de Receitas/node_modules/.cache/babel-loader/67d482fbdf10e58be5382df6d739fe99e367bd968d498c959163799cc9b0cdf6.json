{"ast":null,"code":"var _jsxFileName = \"/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-recipes-app/src/pages/RecipeInProgress.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from 'react';\nimport { useRouteMatch, useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\nimport { fetchRecipe } from '../helpers/recipeApi';\nimport './styles/RecipeInProgress.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeInProgress() {\n  _s();\n  const {\n    recipe,\n    setRecipe,\n    ingredientList,\n    setIngredientList\n  } = useContext(RecipeContext);\n  const {\n    params\n  } = useRouteMatch();\n  const [completeIngredients, setCompleteIngredients] = useState([]);\n  const history = useHistory();\n  const handleClick = () => {\n    const isMeal = history.location.pathname.includes('/meals');\n    const recipeId = isMeal ? recipe.idMeal : recipe.idDrink;\n    const finishedRecipe = {\n      id: recipeId,\n      nationality: recipe.strArea || '',\n      name: recipe.strMeal || recipe.strDrink,\n      category: recipe.strCategory,\n      image: recipe.strMealThumb || recipe.strDrinkThumb,\n      tags: recipe.strTags ? recipe.strTags.split(',') : [],\n      alcoholicOrNot: recipe.strAlcoholic || '',\n      type: isMeal ? 'meal' : 'drink',\n      doneDate: new Date(Date.now()).toISOString()\n    };\n    const storedRecipes = localStorage.getItem('doneRecipes');\n    const parsedRecipes = storedRecipes ? JSON.parse(storedRecipes) : [];\n    const updatedRecipes = [...parsedRecipes, finishedRecipe];\n    localStorage.setItem('doneRecipes', JSON.stringify(updatedRecipes));\n    history.push('/done-recipes');\n  };\n  const updateInProgressRecipes = (recipeId, ingredientIndex, isChecked) => {\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes')) || {};\n    const recipeType = history.location.pathname.includes('/meals') ? 'meals' : 'drinks';\n    const currentRecipe = inProgressRecipes[recipeType] || {};\n    const updatedRecipe = {\n      ...currentRecipe,\n      [recipeId]: {\n        ...(currentRecipe[recipeId] || {}),\n        [ingredientIndex]: isChecked\n      }\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify({\n      ...inProgressRecipes,\n      [recipeType]: updatedRecipe\n    }));\n  };\n  const handleIngredientCheck = index => {\n    const ingredientLabel = document.getElementById(`ingredient-${index}`);\n    ingredientLabel.classList.toggle('completed');\n    ingredientLabel.classList.toggle('incomplete');\n    const newCompleteIngredients = [...completeIngredients];\n    newCompleteIngredients[index] = !newCompleteIngredients[index];\n    setCompleteIngredients(newCompleteIngredients);\n    const recipeId = history.location.pathname.split('/')[2];\n    updateInProgressRecipes(recipeId, index, newCompleteIngredients[index]);\n  };\n  useEffect(() => {\n    const recipeId = history.location.pathname.split('/')[2];\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes')) || {};\n    const recipeType = history.location.pathname.includes('/meals') ? 'meals' : 'drinks';\n    const currentRecipe = inProgressRecipes[recipeType] || {};\n    const completedIngredients = currentRecipe[recipeId] || {};\n    const newCompleteIngredients = ingredientList.map((_, index) => completedIngredients[index] || false);\n    setCompleteIngredients(newCompleteIngredients);\n  }, []);\n  useEffect(() => {\n    const getRecipe = async () => {\n      const resultRecipe = await fetchRecipe(params.id);\n      setRecipe(resultRecipe);\n    };\n    getRecipe();\n  }, [params.id, setRecipe]);\n  useEffect(() => {\n    if (recipe) {\n      const ingredients = [];\n      const n = 20;\n      for (let i = 1; i <= n; i += 1) {\n        if (recipe[`strIngredient${i}`]) {\n          ingredients.push(`${recipe[`strIngredient${i}`]} - ${recipe[`strMeasure${i}`]}`);\n        } else {\n          break;\n        }\n      }\n      setIngredientList(ingredients);\n      setCompleteIngredients(new Array(ingredients.length).fill(false));\n    }\n  }, [recipe, setIngredientList]);\n  const allIngredientsCompleted = completeIngredients.every(completed => completed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"\",\n      alt: \"\",\n      \"data-testid\": \"recipe-photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      children: \"RecipeInProgress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), ingredientList && ingredientList.map((element, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      \"data-testid\": `${index}-ingredient-step`,\n      id: `ingredient-${index}`,\n      className: completeIngredients[index] ? 'completed' : 'incomplete',\n      children: [element, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: element,\n        onChange: () => handleIngredientCheck(index),\n        checked: completeIngredients[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"compartilhar\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"share-btn\",\n        name: \"compartilhar\",\n        children: \"compartilhar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"favorite\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"favorite-btn\",\n        name: \"favorite\",\n        children: \"favoritar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        \"data-testid\": \"recipe-category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"finish\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"finish-recipe-btn\",\n        name: \"finish\",\n        type: \"button\",\n        disabled: !allIngredientsCompleted,\n        onClick: handleClick,\n        children: \"finalizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeInProgress, \"ADT7+QzKjk6Lu9ZbDoMK/7O9lk8=\", false, function () {\n  return [useRouteMatch, useHistory];\n});\n_c = RecipeInProgress;\nexport default RecipeInProgress;\nvar _c;\n$RefreshReg$(_c, \"RecipeInProgress\");","map":{"version":3,"names":["useContext","useEffect","useState","useRouteMatch","useHistory","RecipeContext","fetchRecipe","RecipeInProgress","recipe","setRecipe","ingredientList","setIngredientList","params","completeIngredients","setCompleteIngredients","history","handleClick","isMeal","location","pathname","includes","recipeId","idMeal","idDrink","finishedRecipe","id","nationality","strArea","name","strMeal","strDrink","category","strCategory","image","strMealThumb","strDrinkThumb","tags","strTags","split","alcoholicOrNot","strAlcoholic","type","doneDate","Date","now","toISOString","storedRecipes","localStorage","getItem","parsedRecipes","JSON","parse","updatedRecipes","setItem","stringify","push","updateInProgressRecipes","ingredientIndex","isChecked","inProgressRecipes","recipeType","currentRecipe","updatedRecipe","handleIngredientCheck","index","ingredientLabel","document","getElementById","classList","toggle","newCompleteIngredients","completedIngredients","map","_","getRecipe","resultRecipe","ingredients","n","i","Array","length","fill","allIngredientsCompleted","every","completed","element"],"sources":["/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-recipes-app/src/pages/RecipeInProgress.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { useRouteMatch, useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\nimport { fetchRecipe } from '../helpers/recipeApi';\nimport './styles/RecipeInProgress.css';\n\nfunction RecipeInProgress() {\n  const {\n    recipe,\n    setRecipe,\n    ingredientList,\n    setIngredientList,\n  } = useContext(RecipeContext);\n  const { params } = useRouteMatch();\n  const [completeIngredients, setCompleteIngredients] = useState([]);\n  const history = useHistory();\n\n  const handleClick = () => {\n    const isMeal = history.location.pathname.includes('/meals');\n    const recipeId = isMeal ? recipe.idMeal : recipe.idDrink;\n    const finishedRecipe = {\n      id: recipeId,\n      nationality: recipe.strArea || '',\n      name: recipe.strMeal || recipe.strDrink,\n      category: recipe.strCategory,\n      image: recipe.strMealThumb || recipe.strDrinkThumb,\n      tags: recipe.strTags ? recipe.strTags.split(',') : [],\n      alcoholicOrNot: recipe.strAlcoholic || '',\n      type: isMeal ? 'meal' : 'drink',\n      doneDate: new Date(Date.now()).toISOString(),\n    };\n    const storedRecipes = localStorage.getItem('doneRecipes');\n    const parsedRecipes = storedRecipes ? JSON.parse(storedRecipes) : [];\n    const updatedRecipes = [...parsedRecipes, finishedRecipe];\n    localStorage.setItem('doneRecipes', JSON.stringify(updatedRecipes));\n    history.push('/done-recipes');\n  };\n\n  const updateInProgressRecipes = (recipeId, ingredientIndex, isChecked) => {\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes')) || {};\n    const recipeType = history.location.pathname.includes('/meals') ? 'meals' : 'drinks';\n    const currentRecipe = inProgressRecipes[recipeType] || {};\n    const updatedRecipe = {\n      ...currentRecipe,\n      [recipeId]: {\n        ...(currentRecipe[recipeId] || {}),\n        [ingredientIndex]: isChecked,\n      },\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify({\n      ...inProgressRecipes,\n      [recipeType]: updatedRecipe,\n    }));\n  };\n\n  const handleIngredientCheck = (index) => {\n    const ingredientLabel = document.getElementById(`ingredient-${index}`);\n    ingredientLabel.classList.toggle('completed');\n    ingredientLabel.classList.toggle('incomplete');\n    const newCompleteIngredients = [...completeIngredients];\n    newCompleteIngredients[index] = !newCompleteIngredients[index];\n    setCompleteIngredients(newCompleteIngredients);\n\n    const recipeId = history.location.pathname.split('/')[2];\n    updateInProgressRecipes(recipeId, index, newCompleteIngredients[index]);\n  };\n\n  useEffect(() => {\n    const recipeId = history.location.pathname.split('/')[2];\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes')) || {};\n    const recipeType = history.location.pathname.includes('/meals') ? 'meals' : 'drinks';\n    const currentRecipe = inProgressRecipes[recipeType] || {};\n    const completedIngredients = currentRecipe[recipeId] || {};\n    const newCompleteIngredients = ingredientList.map(\n      (_, index) => completedIngredients[index] || false,\n    );\n    setCompleteIngredients(newCompleteIngredients);\n  }, []);\n\n  useEffect(() => {\n    const getRecipe = async () => {\n      const resultRecipe = await fetchRecipe(params.id);\n      setRecipe(resultRecipe);\n    };\n    getRecipe();\n  }, [params.id, setRecipe]);\n\n  useEffect(\n    () => {\n      if (recipe) {\n        const ingredients = [];\n        const n = 20;\n        for (let i = 1; i <= n; i += 1) {\n          if (recipe[`strIngredient${i}`]) {\n            ingredients.push(\n              `${recipe[`strIngredient${i}`]} - ${recipe[`strMeasure${i}`]}`,\n            );\n          } else {\n            break;\n          }\n        }\n        setIngredientList(ingredients);\n        setCompleteIngredients(new Array(ingredients.length).fill(false));\n      }\n    },\n    [recipe, setIngredientList],\n  );\n  const allIngredientsCompleted = completeIngredients.every((completed) => completed);\n\n  return (\n    <div>\n      <img src=\"\" alt=\"\" data-testid=\"recipe-photo\" />\n      <h1 data-testid=\"recipe-title\">RecipeInProgress</h1>\n\n      {ingredientList && ingredientList.map((element, index) => (\n        <label\n          data-testid={ `${index}-ingredient-step` }\n          key={ index }\n          id={ `ingredient-${index}` }\n          className={ completeIngredients[index] ? 'completed' : 'incomplete' }\n        >\n          {element}\n          <input\n            type=\"checkbox\"\n            value={ element }\n            onChange={ () => handleIngredientCheck(index) }\n            checked={ completeIngredients[index] }\n          />\n        </label>\n      ))}\n      <label htmlFor=\"compartilhar\">\n        <button data-testid=\"share-btn\" name=\"compartilhar\">\n          compartilhar\n        </button>\n      </label>\n      <label htmlFor=\"favorite\">\n        <button data-testid=\"favorite-btn\" name=\"favorite\">\n          favoritar\n        </button>\n      </label>\n      <label htmlFor=\"\">\n        <input type=\"text\" data-testid=\"recipe-category\" />\n      </label>\n      <p data-testid=\"instructions\" />\n      <label htmlFor=\"finish\">\n        <button\n          data-testid=\"finish-recipe-btn\"\n          name=\"finish\"\n          type=\"button\"\n          disabled={ !allIngredientsCompleted }\n          onClick={ handleClick }\n        >\n          finalizar\n        </button>\n      </label>\n    </div>\n  );\n}\nexport default RecipeInProgress;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
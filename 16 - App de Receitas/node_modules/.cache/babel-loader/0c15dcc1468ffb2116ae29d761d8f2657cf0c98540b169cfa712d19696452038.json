{"ast":null,"code":"var _jsxFileName = \"/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-recipes-app/src/components/BttMealsCategory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport RecipeContext from '../context/RecipeContext';\nimport all from '../styles/All.png';\nimport beef from '../styles/beef.png';\nimport goat from '../styles/goat.png';\nimport chicken from '../styles/chicken.png';\nimport breakfast from '../styles/breakfast.png';\nimport dessert from '../styles/dessert.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BttMealsCategory() {\n  _s();\n  const [mealsCategory, setMealsCategory] = useState([]);\n  const {\n    setMealsRecipes\n  } = useContext(RecipeContext);\n  const [currCategory, setcurrCategory] = useState(' ');\n  useEffect(() => {\n    const fetchMealsfunction = async () => {\n      try {\n        const resp = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n        const mealsCategorys = await resp.json();\n        const number = 5;\n        const test = mealsCategorys.meals.slice(0, number).map(category => category.strCategory);\n        setMealsCategory(test);\n      } catch (error) {\n        console.error(error.message); //  fetch( `www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n      }\n    };\n\n    fetchMealsfunction();\n  }, []);\n  const array = [beef, breakfast, chicken, dessert, goat];\n  const handleALl = async () => {\n    try {\n      const resp = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const mealsRecipe = await resp.json();\n      const number = 12;\n      const test = mealsRecipe.meals.slice(0, number);\n      setMealsRecipes(test);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  const handleClick = async category => {\n    setcurrCategory(category);\n    if (currCategory === category) {\n      return handleALl();\n    }\n    try {\n      const res = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n      const mealsCategorys = await res.json();\n      const number = 12;\n      const test = mealsCategorys.meals.slice(0, number);\n      setMealsRecipes(test);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-btt-meals\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons-search-meals\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"All-category-filter\",\n        type: \"button\",\n        onClick: handleALl,\n        className: \"icon-recipes\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: all,\n          alt: \"\\xCDcones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), mealsCategory === null || mealsCategory === void 0 ? void 0 : mealsCategory.map((category, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": `${category}-category-filter`,\n        type: \"button\",\n        onClick: () => handleClick(category),\n        className: \"icon-recipes\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: array[index],\n          alt: \"\\xCDcones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(BttMealsCategory, \"wTXvIFAIP82OChE9s2jld9C7u5M=\");\n_c = BttMealsCategory;\nexport default BttMealsCategory;\nvar _c;\n$RefreshReg$(_c, \"BttMealsCategory\");","map":{"version":3,"names":["React","useEffect","useState","useContext","RecipeContext","all","beef","goat","chicken","breakfast","dessert","BttMealsCategory","mealsCategory","setMealsCategory","setMealsRecipes","currCategory","setcurrCategory","fetchMealsfunction","resp","fetch","mealsCategorys","json","number","test","meals","slice","map","category","strCategory","error","console","message","array","handleALl","mealsRecipe","handleClick","res","index"],"sources":["/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-recipes-app/src/components/BttMealsCategory.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport RecipeContext from '../context/RecipeContext';\nimport all from '../styles/All.png';\nimport beef from '../styles/beef.png';\nimport goat from '../styles/goat.png';\nimport chicken from '../styles/chicken.png';\nimport breakfast from '../styles/breakfast.png';\nimport dessert from '../styles/dessert.png';\n\nfunction BttMealsCategory() {\n  const [mealsCategory, setMealsCategory] = useState([]);\n  const { setMealsRecipes } = useContext(RecipeContext);\n  const [currCategory, setcurrCategory] = useState(' ');\n\n  useEffect(() => {\n    const fetchMealsfunction = async () => {\n      try {\n        const resp = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n        const mealsCategorys = await resp.json();\n        const number = 5;\n        const test = mealsCategorys.meals\n          .slice(0, number).map((category) => category.strCategory);\n        setMealsCategory(test);\n      } catch (error) {\n        console.error(error.message); //  fetch( `www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n      }\n    };\n    fetchMealsfunction();\n  }, []);\n\n  const array = [beef, breakfast, chicken, dessert, goat];\n\n  const handleALl = async () => {\n    try {\n      const resp = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const mealsRecipe = await resp.json();\n      const number = 12;\n      const test = mealsRecipe.meals\n        .slice(0, number);\n      setMealsRecipes(test);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const handleClick = async (category) => {\n    setcurrCategory(category);\n    if (currCategory === category) {\n      return handleALl();\n    }\n    try {\n      const res = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n      const mealsCategorys = await res.json();\n      const number = 12;\n      const test = mealsCategorys.meals\n        .slice(0, number);\n      setMealsRecipes(test);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return (\n    <div className=\"container-btt-meals\">\n      <div className=\"icons-search-meals\">\n        <button\n          data-testid=\"All-category-filter\"\n          type=\"button\"\n          onClick={ handleALl }\n          className=\"icon-recipes\"\n        >\n          <img src={ all } alt=\"Ícones\" />\n        </button>\n        { mealsCategory?.map((category, index) => (\n          <button\n            data-testid={ `${category}-category-filter` }\n            key={ category }\n            type=\"button\"\n            onClick={ () => handleClick(category) }\n            className=\"icon-recipes\"\n          >\n            <img src={ array[index] } alt=\"Ícones\" />\n          </button>\n        )) }\n      </div>\n    </div>\n  );\n}\n\nexport default BttMealsCategory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
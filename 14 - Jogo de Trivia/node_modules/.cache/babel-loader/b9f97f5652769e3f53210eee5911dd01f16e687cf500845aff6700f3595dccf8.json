{"ast":null,"code":"var _jsxFileName = \"/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-trivia-react-redux/src/pages/Feedback.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Feedback extends Component {\n  constructor() {\n    super(...arguments);\n    this.feedbackP = () => {\n      const {\n        assertions\n      } = this.props;\n      const three = 3;\n      if (assertions >= three) {\n        return 'Well Done!';\n      }\n      return 'Could be better...';\n    };\n  }\n  render() {\n    const {\n      assertions,\n      score\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"feedback-text\",\n          children: this.feedbackP()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"feedback-total-question\",\n            children: assertions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"feedback-total-score\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-primary\",\n          type: \"button\",\n          \"data-testid\": \"btn-play-again\",\n          onClick: () => {\n            const {\n              history\n            } = this.props;\n            history.push('/');\n          },\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"btn-ranking\",\n          onClick: () => {\n            const {\n              history\n            } = this.props;\n            history.push('/ranking');\n          },\n          children: \"Ranking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nFeedback.propTypes = {\n  assertions: PropTypes.number,\n  score: PropTypes.number,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  })\n}.isRequired;\nconst mapStateToProps = state => ({\n  assertions: state.player.assertions,\n  score: state.player.score,\n  gravatarEmail: state.player.gravatarEmail\n});\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"names":["React","Component","connect","PropTypes","Header","Feedback","feedbackP","assertions","props","three","render","score","history","push","propTypes","number","shape","func","isRequired","mapStateToProps","state","player","gravatarEmail"],"sources":["/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-trivia-react-redux/src/pages/Feedback.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\n\nclass Feedback extends Component {\n  feedbackP = () => {\n    const { assertions } = this.props;\n    const three = 3;\n    if (assertions >= three) {\n      return 'Well Done!';\n    } return 'Could be better...';\n  };\n\n  render() {\n    const { assertions, score } = this.props;\n    return (\n      <>\n        <Header />\n        <div>\n          <p data-testid=\"feedback-text\">\n            {this.feedbackP()}\n          </p>\n          <p>\n            <p data-testid=\"feedback-total-question\">\n              {assertions}\n            </p>\n          </p>\n          <p>\n            <p data-testid=\"feedback-total-score\">{score}</p>\n          </p>\n        </div>\n        <div className=\"buttons\">\n          <button\n            className=\"button is-primary\"\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n            onClick={ () => {\n              const { history } = this.props;\n              history.push('/');\n            } }\n          >\n            Play Again\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"btn-ranking\"\n            onClick={ () => {\n              const { history } = this.props;\n              history.push('/ranking');\n            } }\n          >\n            Ranking\n          </button>\n        </div>\n      </>\n    );\n  }\n}\nFeedback.propTypes = {\n  assertions: PropTypes.number,\n  score: PropTypes.number,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\nconst mapStateToProps = (state) => ({\n  assertions: state.player.assertions,\n  score: state.player.score,\n  gravatarEmail: state.player.gravatarEmail,\n});\nexport default connect(mapStateToProps)(Feedback);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,sBAAsB;AAAC;AAAA;AAE1C,MAAMC,QAAQ,SAASJ,SAAS,CAAC;EAAA;IAAA;IAAA,KAC/BK,SAAS,GAAG,MAAM;MAChB,MAAM;QAAEC;MAAW,CAAC,GAAG,IAAI,CAACC,KAAK;MACjC,MAAMC,KAAK,GAAG,CAAC;MACf,IAAIF,UAAU,IAAIE,KAAK,EAAE;QACvB,OAAO,YAAY;MACrB;MAAE,OAAO,oBAAoB;IAC/B,CAAC;EAAA;EAEDC,MAAM,GAAG;IACP,MAAM;MAAEH,UAAU;MAAEI;IAAM,CAAC,GAAG,IAAI,CAACH,KAAK;IACxC,oBACE;MAAA,wBACE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV;QAAA,wBACE;UAAG,eAAY,eAAe;UAAA,UAC3B,IAAI,CAACF,SAAS;QAAE;UAAA;UAAA;UAAA;QAAA,QACf,eACJ;UAAA,uBACE;YAAG,eAAY,yBAAyB;YAAA,UACrCC;UAAU;YAAA;YAAA;YAAA;UAAA;QACT;UAAA;UAAA;UAAA;QAAA,QACF,eACJ;UAAA,uBACE;YAAG,eAAY,sBAAsB;YAAA,UAAEI;UAAK;YAAA;YAAA;YAAA;UAAA;QAAK;UAAA;UAAA;UAAA;QAAA,QAC/C;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACN;QAAK,SAAS,EAAC,SAAS;QAAA,wBACtB;UACE,SAAS,EAAC,mBAAmB;UAC7B,IAAI,EAAC,QAAQ;UACb,eAAY,gBAAgB;UAC5B,OAAO,EAAG,MAAM;YACd,MAAM;cAAEC;YAAQ,CAAC,GAAG,IAAI,CAACJ,KAAK;YAC9BI,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;UACnB,CAAG;UAAA,UACJ;QAED;UAAA;UAAA;UAAA;QAAA,QAAS,eACT;UACE,IAAI,EAAC,QAAQ;UACb,eAAY,aAAa;UACzB,OAAO,EAAG,MAAM;YACd,MAAM;cAAED;YAAQ,CAAC,GAAG,IAAI,CAACJ,KAAK;YAC9BI,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;UAC1B,CAAG;UAAA,UACJ;QAED;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACL;IAAA,gBACL;EAEP;AACF;AACAR,QAAQ,CAACS,SAAS,GAAG;EACnBP,UAAU,EAAEJ,SAAS,CAACY,MAAM;EAC5BJ,KAAK,EAAER,SAAS,CAACY,MAAM;EACvBH,OAAO,EAAET,SAAS,CAACa,KAAK,CAAC;IACvBH,IAAI,EAAEV,SAAS,CAACc;EAClB,CAAC;AACH,CAAC,CAACC,UAAU;AACZ,MAAMC,eAAe,GAAIC,KAAK,KAAM;EAClCb,UAAU,EAAEa,KAAK,CAACC,MAAM,CAACd,UAAU;EACnCI,KAAK,EAAES,KAAK,CAACC,MAAM,CAACV,KAAK;EACzBW,aAAa,EAAEF,KAAK,CAACC,MAAM,CAACC;AAC9B,CAAC,CAAC;AACF,eAAepB,OAAO,CAACiB,eAAe,CAAC,CAACd,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-starwars-planets-search/src/context/ApiProvider.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport ApiContext from './ApiContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApiProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [planets, setPlanets] = useState([]);\n  const [filtredPlanets, setFiltredPlanets] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch('https://swapi.dev/api/planets');\n      const data = await response.json();\n      const planetsData = data.results.map(planet => {\n        delete planet.residents;\n        return planet;\n      });\n      setPlanets(planetsData);\n      setFiltredPlanets(planetsData);\n    }\n    fetchData();\n  }, []);\n  function nameFilter(text) {\n    const regex = new RegExp(`${text}`, 'i');\n    setFiltredPlanets(planets.filter(item => item.name.match(regex)));\n  }\n  function numericFilter(column, type, number) {\n    if (type === 'maior que') {\n      setFiltredPlanets(planets.filter(item => Number(number) < Number(item[column])));\n    } else if (type === 'menor que') {\n      setFiltredPlanets(planets.filter(item => Number(number) > Number(item[column])));\n    } else if (type === 'igual a') {\n      setFiltredPlanets(planets.filter(item => Number(number) === Number(item[column])));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(ApiContext.Provider, {\n    value: {\n      filtredPlanets,\n      nameFilter,\n      numericFilter\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(ApiProvider, \"0925081GntEvQ/whpdI2nsrvnac=\");\n_c = ApiProvider;\nApiProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default ApiProvider;\nvar _c;\n$RefreshReg$(_c, \"ApiProvider\");","map":{"version":3,"names":["PropTypes","useEffect","useState","ApiContext","ApiProvider","children","planets","setPlanets","filtredPlanets","setFiltredPlanets","fetchData","response","fetch","data","json","planetsData","results","map","planet","residents","nameFilter","text","regex","RegExp","filter","item","name","match","numericFilter","column","type","number","Number","propTypes","node","isRequired"],"sources":["/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-starwars-planets-search/src/context/ApiProvider.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport ApiContext from './ApiContext';\n\nfunction ApiProvider({ children }) {\n  const [planets, setPlanets] = useState([]);\n  const [filtredPlanets, setFiltredPlanets] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch('https://swapi.dev/api/planets');\n      const data = await response.json();\n      const planetsData = data.results.map((planet) => {\n        delete planet.residents;\n        return planet;\n      });\n      setPlanets(planetsData);\n      setFiltredPlanets(planetsData);\n    }\n    fetchData();\n  }, []);\n\n  function nameFilter(text) {\n    const regex = new RegExp(`${text}`, 'i');\n    setFiltredPlanets(planets.filter((item) => item.name.match(regex)));\n  }\n\n  function numericFilter(column, type, number) {\n    if (type === 'maior que') {\n      setFiltredPlanets(planets.filter((item) => Number(number) < Number(item[column])));\n    } else if (type === 'menor que') {\n      setFiltredPlanets(planets.filter((item) => Number(number) > Number(item[column])));\n    } else if (type === 'igual a') {\n      setFiltredPlanets(planets\n        .filter((item) => Number(number) === Number(item[column])));\n    }\n  }\n\n  return (\n    <ApiContext.Provider value={ { filtredPlanets, nameFilter, numericFilter } }>\n      {children}\n    </ApiContext.Provider>\n  );\n}\nApiProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ApiProvider;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,cAAc;AAAC;AAEtC,SAASC,WAAW,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,eAAeS,SAAS,GAAG;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;MAC7D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC,MAAMC,WAAW,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;QAC/C,OAAOA,MAAM,CAACC,SAAS;QACvB,OAAOD,MAAM;MACf,CAAC,CAAC;MACFX,UAAU,CAACQ,WAAW,CAAC;MACvBN,iBAAiB,CAACM,WAAW,CAAC;IAChC;IACAL,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,SAASU,UAAU,CAACC,IAAI,EAAE;IACxB,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAAE,GAAEF,IAAK,EAAC,EAAE,GAAG,CAAC;IACxCZ,iBAAiB,CAACH,OAAO,CAACkB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC,CAAC,CAAC;EACrE;EAEA,SAASM,aAAa,CAACC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAE;IAC3C,IAAID,IAAI,KAAK,WAAW,EAAE;MACxBrB,iBAAiB,CAACH,OAAO,CAACkB,MAAM,CAAEC,IAAI,IAAKO,MAAM,CAACD,MAAM,CAAC,GAAGC,MAAM,CAACP,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC,MAAM,IAAIC,IAAI,KAAK,WAAW,EAAE;MAC/BrB,iBAAiB,CAACH,OAAO,CAACkB,MAAM,CAAEC,IAAI,IAAKO,MAAM,CAACD,MAAM,CAAC,GAAGC,MAAM,CAACP,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC,MAAM,IAAIC,IAAI,KAAK,SAAS,EAAE;MAC7BrB,iBAAiB,CAACH,OAAO,CACtBkB,MAAM,CAAEC,IAAI,IAAKO,MAAM,CAACD,MAAM,CAAC,KAAKC,MAAM,CAACP,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/D;EACF;EAEA,oBACE,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAG;MAAErB,cAAc;MAAEY,UAAU;MAAEQ;IAAc,CAAG;IAAA,UACzEvB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE1B;AAAC,GAvCQD,WAAW;AAAA,KAAXA,WAAW;AAwCpBA,WAAW,CAAC6B,SAAS,GAAG;EACtB5B,QAAQ,EAAEL,SAAS,CAACkC,IAAI,CAACC;AAC3B,CAAC;AAED,eAAe/B,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-starwars-planets-search/src/context/DataContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport fetchAPI from '../services/fetchAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\nexport function DataProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, setState] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: 0\n  });\n  const [columns, setColumns] = useState(['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\n  const [data, setData] = useState([]);\n  function filterByNumericValues(filter, comp) {\n    const {\n      column,\n      comparison,\n      value\n    } = comp;\n    if (comparison === 'maior que') {\n      return filter.filter(planet => Number(planet[column]) > Number(value));\n    }\n    if (comparison === 'menor que') {\n      return filter.filter(planet => Number(planet[column]) < Number(value));\n    }\n    return filter.filter(planet => Number(planet[column]) === Number(value));\n  }\n  const handleFilter = (byFilter, value) => {\n    if (byFilter === 'nameFilter') {\n      const filterByName = data.filter(planet => planet.name.toLowerCase().includes(value.toLowerCase()));\n      setFilteredPlanets(filterByName);\n    }\n    if (byFilter === 'btnFilter') {\n      setFilteredPlanets(filterByNumericValues(filteredPlanets, state));\n    }\n  };\n  async function fetchPlanets() {\n    const planets = await fetchAPI();\n    setData(planets.results);\n    setFilteredPlanets(planets.results);\n  }\n  useEffect(() => {\n    fetchPlanets();\n  }, []);\n  const value = {\n    state,\n    setState,\n    columns,\n    setColumns,\n    filteredPlanets,\n    setFilteredPlanets,\n    handleFilter\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(DataProvider, \"kxBTDu9OjpLmxBcC4+E5W1eLzKs=\");\n_c = DataProvider;\nDataProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","PropTypes","fetchAPI","DataContext","DataProvider","children","state","setState","column","comparison","value","columns","setColumns","filteredPlanets","setFilteredPlanets","data","setData","filterByNumericValues","filter","comp","planet","Number","handleFilter","byFilter","filterByName","name","toLowerCase","includes","fetchPlanets","planets","results","propTypes","node","isRequired"],"sources":["/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-starwars-planets-search/src/context/DataContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport fetchAPI from '../services/fetchAPI';\n\nexport const DataContext = createContext();\n\nexport function DataProvider({ children }) {\n  const [state, setState] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: 0,\n  });\n  const [columns, setColumns] = useState([\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ]);\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\n  const [data, setData] = useState([]);\n\n  function filterByNumericValues(filter, comp) {\n    const { column, comparison, value } = comp;\n    if (comparison === 'maior que') {\n      return filter.filter((planet) => Number(planet[column]) > Number(value));\n    }\n    if (comparison === 'menor que') {\n      return filter.filter((planet) => Number(planet[column]) < Number(value));\n    }\n    return filter.filter((planet) => Number(planet[column]) === Number(value));\n  }\n\n  const handleFilter = (byFilter, value) => {\n    if (byFilter === 'nameFilter') {\n      const filterByName = data.filter((planet) => planet.name\n        .toLowerCase().includes(value.toLowerCase()));\n      setFilteredPlanets(filterByName);\n    }\n    if (byFilter === 'btnFilter') {\n      setFilteredPlanets(filterByNumericValues(filteredPlanets, state));\n    }\n  };\n\n  async function fetchPlanets() {\n    const planets = await fetchAPI();\n    setData(planets.results);\n    setFilteredPlanets(planets.results);\n  }\n\n  useEffect(() => {\n    fetchPlanets();\n  }, []);\n\n  const value = {\n    state,\n    setState,\n    columns,\n    setColumns,\n    filteredPlanets,\n    setFilteredPlanets,\n    handleFilter,\n  };\n\n  return (\n    <DataContext.Provider value={ value }>\n      { children }\n    </DataContext.Provider>\n  );\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC;AAE5C,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAE;AAE1C,OAAO,SAASM,YAAY,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC;IACjCQ,MAAM,EAAE,YAAY;IACpBC,UAAU,EAAE,WAAW;IACvBC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CACrC,YAAY,EACZ,gBAAgB,EAChB,UAAU,EACV,iBAAiB,EACjB,eAAe,CAChB,CAAC;EACF,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEpC,SAASiB,qBAAqB,CAACC,MAAM,EAAEC,IAAI,EAAE;IAC3C,MAAM;MAAEX,MAAM;MAAEC,UAAU;MAAEC;IAAM,CAAC,GAAGS,IAAI;IAC1C,IAAIV,UAAU,KAAK,WAAW,EAAE;MAC9B,OAAOS,MAAM,CAACA,MAAM,CAAEE,MAAM,IAAKC,MAAM,CAACD,MAAM,CAACZ,MAAM,CAAC,CAAC,GAAGa,MAAM,CAACX,KAAK,CAAC,CAAC;IAC1E;IACA,IAAID,UAAU,KAAK,WAAW,EAAE;MAC9B,OAAOS,MAAM,CAACA,MAAM,CAAEE,MAAM,IAAKC,MAAM,CAACD,MAAM,CAACZ,MAAM,CAAC,CAAC,GAAGa,MAAM,CAACX,KAAK,CAAC,CAAC;IAC1E;IACA,OAAOQ,MAAM,CAACA,MAAM,CAAEE,MAAM,IAAKC,MAAM,CAACD,MAAM,CAACZ,MAAM,CAAC,CAAC,KAAKa,MAAM,CAACX,KAAK,CAAC,CAAC;EAC5E;EAEA,MAAMY,YAAY,GAAG,CAACC,QAAQ,EAAEb,KAAK,KAAK;IACxC,IAAIa,QAAQ,KAAK,YAAY,EAAE;MAC7B,MAAMC,YAAY,GAAGT,IAAI,CAACG,MAAM,CAAEE,MAAM,IAAKA,MAAM,CAACK,IAAI,CACrDC,WAAW,EAAE,CAACC,QAAQ,CAACjB,KAAK,CAACgB,WAAW,EAAE,CAAC,CAAC;MAC/CZ,kBAAkB,CAACU,YAAY,CAAC;IAClC;IACA,IAAID,QAAQ,KAAK,WAAW,EAAE;MAC5BT,kBAAkB,CAACG,qBAAqB,CAACJ,eAAe,EAAEP,KAAK,CAAC,CAAC;IACnE;EACF,CAAC;EAED,eAAesB,YAAY,GAAG;IAC5B,MAAMC,OAAO,GAAG,MAAM3B,QAAQ,EAAE;IAChCc,OAAO,CAACa,OAAO,CAACC,OAAO,CAAC;IACxBhB,kBAAkB,CAACe,OAAO,CAACC,OAAO,CAAC;EACrC;EAEA/B,SAAS,CAAC,MAAM;IACd6B,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMlB,KAAK,GAAG;IACZJ,KAAK;IACLC,QAAQ;IACRI,OAAO;IACPC,UAAU;IACVC,eAAe;IACfC,kBAAkB;IAClBQ;EACF,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAGZ,KAAO;IAAA,UACjCL;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE3B;AAAC,GA/DeD,YAAY;AAAA,KAAZA,YAAY;AAiE5BA,YAAY,CAAC2B,SAAS,GAAG;EACvB1B,QAAQ,EAAEJ,SAAS,CAAC+B,IAAI,CAACC;AAC3B,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
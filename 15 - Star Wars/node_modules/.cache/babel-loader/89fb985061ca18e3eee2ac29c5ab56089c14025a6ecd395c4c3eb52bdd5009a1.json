{"ast":null,"code":"var _jsxFileName = \"/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-starwars-planets-search/src/context/DataContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@tanstack/react-query';\nimport fetchApi from '../utils/fetchApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\nexport function DataProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    data,\n    isError,\n    isLoading\n  } = useQuery({\n    queryKey: ['planets'],\n    queryFn: fetchApi\n  });\n  const value = {\n    data,\n    isError,\n    isLoading\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(DataProvider, \"DkCu/M/H/qJBve+1UG/TeE5/z38=\", false, function () {\n  return [useQuery];\n});\n_c = DataProvider;\nDataProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","PropTypes","useQuery","fetchApi","DataContext","DataProvider","children","data","isError","isLoading","queryKey","queryFn","value","propTypes","node","isRequired"],"sources":["/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-starwars-planets-search/src/context/DataContext.jsx"],"sourcesContent":["import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@tanstack/react-query';\nimport fetchApi from '../utils/fetchApi';\n\nexport const DataContext = createContext();\n\nexport function DataProvider({ children }) {\n  const { data, isError, isLoading } = useQuery({\n    queryKey: ['planets'],\n    queryFn: fetchApi,\n  });\n\n  const value = {\n    data,\n    isError,\n    isLoading,\n  };\n\n  return (\n    <DataContext.Provider value={ value }>\n      { children }\n    </DataContext.Provider>\n  );\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAC5C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,QAAQ,MAAM,mBAAmB;AAAC;AAEzC,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAE;AAE1C,OAAO,SAASK,YAAY,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EACvC,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGP,QAAQ,CAAC;IAC5CQ,QAAQ,EAAE,CAAC,SAAS,CAAC;IACrBC,OAAO,EAAER;EACX,CAAC,CAAC;EAEF,MAAMS,KAAK,GAAG;IACZL,IAAI;IACJC,OAAO;IACPC;EACF,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAGG,KAAO;IAAA,UACjCN;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE3B;AAAC,GAjBeD,YAAY;EAAA,QACWH,QAAQ;AAAA;AAAA,KAD/BG,YAAY;AAmB5BA,YAAY,CAACQ,SAAS,GAAG;EACvBP,QAAQ,EAAEL,SAAS,CAACa,IAAI,CAACC;AAC3B,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
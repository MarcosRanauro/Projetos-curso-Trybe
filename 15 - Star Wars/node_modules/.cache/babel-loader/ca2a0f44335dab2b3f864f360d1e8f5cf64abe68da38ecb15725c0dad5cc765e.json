{"ast":null,"code":"var _jsxFileName = \"/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-starwars-planets-search/src/context/homeProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport homeContext from './homeContext';\nimport fetchAPI from '../services/fetchAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Provider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [nameFilter, setNameFilter] = useState('');\n  const [planetsFilter, setPlanetsFilter] = useState([]);\n  const {\n    data\n  } = useQuery({\n    queryKey: ['planets'],\n    queryFn: fetchApi\n  });\n  useEffect(() => {\n    fetchAPI(URL).then(data => {\n      const dataResults = data.results;\n      setPlanets(dataResults);\n    });\n  }, []);\n  useEffect(() => {\n    if (nameFilter === '') {\n      setPlanetsFilter(planets);\n    } else {\n      const filterPlanets = planets.filter(planet => planet.name.includes(nameFilter));\n      setPlanetsFilter(filterPlanets);\n    }\n  }, [planets, nameFilter]);\n  const handleClick = state => {\n    const {\n      column,\n      comparison,\n      value\n    } = state;\n    const filtered = data.filter(planet => {\n      switch (comparison) {\n        case 'maior que':\n          return Number(planet[column]) > Number(value);\n        case 'menor que':\n          return Number(planet[column]) < Number(value);\n        case 'igual a':\n          return Number(planet[column]) === Number(value);\n        default:\n          return false;\n      }\n    });\n    setPlanetsFilter(filtered);\n  };\n  const context = {\n    planets,\n    setPlanets,\n    nameFilter,\n    setNameFilter,\n    planetsFilter,\n    setPlanetsFilter,\n    handleClick\n  };\n  return /*#__PURE__*/_jsxDEV(homeContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Provider, \"P+LV19N0rI31SCWNPnz8nGAn+zU=\", true);\n_c = Provider;\nProvider.propTypes = {\n  children: PropTypes.node\n}.isRequired;\nexport default Provider;\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","homeContext","fetchAPI","Provider","children","nameFilter","setNameFilter","planetsFilter","setPlanetsFilter","data","useQuery","queryKey","queryFn","fetchApi","URL","then","dataResults","results","setPlanets","planets","filterPlanets","filter","planet","name","includes","handleClick","state","column","comparison","value","filtered","Number","context","propTypes","node","isRequired"],"sources":["/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-starwars-planets-search/src/context/homeProvider.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport homeContext from './homeContext';\nimport fetchAPI from '../services/fetchAPI';\n\nfunction Provider({ children }) {\n  const [nameFilter, setNameFilter] = useState('');\n  const [planetsFilter, setPlanetsFilter] = useState([]);\n  const { data } = useQuery({\n    queryKey: ['planets'],\n    queryFn: fetchApi,\n  });\n\n  useEffect(() => {\n    fetchAPI(URL)\n      .then((data) => {\n        const dataResults = data.results;\n        setPlanets(dataResults);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (nameFilter === '') {\n      setPlanetsFilter(planets);\n    } else {\n      const filterPlanets = planets\n        .filter((planet) => planet.name\n          .includes((nameFilter)));\n      setPlanetsFilter(filterPlanets);\n    }\n  }, [planets, nameFilter]);\n\n  const handleClick = (state) => {\n    const { column, comparison, value } = state;\n    const filtered = data.filter((planet) => {\n      switch (comparison) {\n      case 'maior que':\n        return Number(planet[column]) > Number(value);\n      case 'menor que':\n        return Number(planet[column]) < Number(value);\n      case 'igual a':\n        return Number(planet[column]) === Number(value);\n      default:\n        return false;\n      }\n    });\n    setPlanetsFilter(filtered);\n  };\n\n  const context = {\n    planets,\n    setPlanets,\n    nameFilter,\n    setNameFilter,\n    planetsFilter,\n    setPlanetsFilter,\n    handleClick,\n  };\n\n  return (\n    <homeContext.Provider value={ context }>\n      {children}\n    </homeContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n\nexport default Provider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC;AAE5C,SAASC,QAAQ,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAEW;EAAK,CAAC,GAAGC,QAAQ,CAAC;IACxBC,QAAQ,EAAE,CAAC,SAAS,CAAC;IACrBC,OAAO,EAAEC;EACX,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACdG,QAAQ,CAACY,GAAG,CAAC,CACVC,IAAI,CAAEN,IAAI,IAAK;MACd,MAAMO,WAAW,GAAGP,IAAI,CAACQ,OAAO;MAChCC,UAAU,CAACF,WAAW,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACd,IAAIM,UAAU,KAAK,EAAE,EAAE;MACrBG,gBAAgB,CAACW,OAAO,CAAC;IAC3B,CAAC,MAAM;MACL,MAAMC,aAAa,GAAGD,OAAO,CAC1BE,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAC5BC,QAAQ,CAAEnB,UAAU,CAAE,CAAC;MAC5BG,gBAAgB,CAACY,aAAa,CAAC;IACjC;EACF,CAAC,EAAE,CAACD,OAAO,EAAEd,UAAU,CAAC,CAAC;EAEzB,MAAMoB,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAM;MAAEC,MAAM;MAAEC,UAAU;MAAEC;IAAM,CAAC,GAAGH,KAAK;IAC3C,MAAMI,QAAQ,GAAGrB,IAAI,CAACY,MAAM,CAAEC,MAAM,IAAK;MACvC,QAAQM,UAAU;QAClB,KAAK,WAAW;UACd,OAAOG,MAAM,CAACT,MAAM,CAACK,MAAM,CAAC,CAAC,GAAGI,MAAM,CAACF,KAAK,CAAC;QAC/C,KAAK,WAAW;UACd,OAAOE,MAAM,CAACT,MAAM,CAACK,MAAM,CAAC,CAAC,GAAGI,MAAM,CAACF,KAAK,CAAC;QAC/C,KAAK,SAAS;UACZ,OAAOE,MAAM,CAACT,MAAM,CAACK,MAAM,CAAC,CAAC,KAAKI,MAAM,CAACF,KAAK,CAAC;QACjD;UACE,OAAO,KAAK;MAAC;IAEjB,CAAC,CAAC;IACFrB,gBAAgB,CAACsB,QAAQ,CAAC;EAC5B,CAAC;EAED,MAAME,OAAO,GAAG;IACdb,OAAO;IACPD,UAAU;IACVb,UAAU;IACVC,aAAa;IACbC,aAAa;IACbC,gBAAgB;IAChBiB;EACF,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAGO,OAAS;IAAA,UACpC5B;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B;AAAC,GA3DQD,QAAQ;AAAA,KAARA,QAAQ;AA6DjBA,QAAQ,CAAC8B,SAAS,GAAG;EACnB7B,QAAQ,EAAEJ,SAAS,CAACkC;AACtB,CAAC,CAACC,UAAU;AAEZ,eAAehC,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
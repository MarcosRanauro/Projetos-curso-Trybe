{"ast":null,"code":"var _jsxFileName = \"/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-starwars-planets-search/src/context/homeProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport homeContext from './homeContext';\nimport fetchAPI from '../services/fetchAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Provider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [planets, setPlanets] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [planetsFilter, setPlanetsFilter] = useState([]);\n  useEffect(() => {\n    fetchAPI(URL).then(data => {\n      const dataResults = data.results;\n      setPlanets(dataResults);\n    });\n  }, []);\n  useEffect(() => {\n    if (nameFilter === '') {\n      setPlanetsFilter(planets);\n    } else {\n      const filterPlanets = planets.filter(planet => planet.name.includes(nameFilter));\n      setPlanetsFilter(filterPlanets);\n    }\n  }, [planets, nameFilter]);\n  const context = useMemo(() => ({\n    planets,\n    setPlanets,\n    nameFilter,\n    setNameFilter,\n    planetsFilter,\n    setPlanetsFilter\n  }), [planets, setPlanets, nameFilter, setNameFilter, planetsFilter, setPlanetsFilter]);\n  return /*#__PURE__*/_jsxDEV(homeContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Provider, \"xYn6dRsBRceQ+NCor4YK2ktTSwU=\");\n_c = Provider;\nProvider.propTypes = {\n  children: PropTypes.node\n}.isRequired;\nexport default Provider;\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","PropTypes","homeContext","fetchAPI","Provider","children","planets","setPlanets","nameFilter","setNameFilter","planetsFilter","setPlanetsFilter","URL","then","data","dataResults","results","filterPlanets","filter","planet","name","includes","context","propTypes","node","isRequired"],"sources":["/home/marcos-ranauro/Trybe/Projetos/sd-027-b-project-starwars-planets-search/src/context/homeProvider.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport homeContext from './homeContext';\nimport fetchAPI from '../services/fetchAPI';\n\nfunction Provider({ children }) {\n  const [planets, setPlanets] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [planetsFilter, setPlanetsFilter] = useState([]);\n\n  useEffect(() => {\n    fetchAPI(URL)\n      .then((data) => {\n        const dataResults = data.results;\n        setPlanets(dataResults);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (nameFilter === '') {\n      setPlanetsFilter(planets);\n    } else {\n      const filterPlanets = planets\n        .filter((planet) => planet.name\n          .includes((nameFilter)));\n      setPlanetsFilter(filterPlanets);\n    }\n  }, [planets, nameFilter]);\n\n  const context = useMemo(() => ({\n    planets, setPlanets, nameFilter, setNameFilter, planetsFilter, setPlanetsFilter,\n  }), [planets, setPlanets, nameFilter, setNameFilter, planetsFilter, setPlanetsFilter]);\n\n  return (\n    <homeContext.Provider value={ context }>\n      {children}\n    </homeContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n\nexport default Provider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC;AAE5C,SAASC,QAAQ,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdI,QAAQ,CAACS,GAAG,CAAC,CACVC,IAAI,CAAEC,IAAI,IAAK;MACd,MAAMC,WAAW,GAAGD,IAAI,CAACE,OAAO;MAChCT,UAAU,CAACQ,WAAW,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU,KAAK,EAAE,EAAE;MACrBG,gBAAgB,CAACL,OAAO,CAAC;IAC3B,CAAC,MAAM;MACL,MAAMW,aAAa,GAAGX,OAAO,CAC1BY,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAC5BC,QAAQ,CAAEb,UAAU,CAAE,CAAC;MAC5BG,gBAAgB,CAACM,aAAa,CAAC;IACjC;EACF,CAAC,EAAE,CAACX,OAAO,EAAEE,UAAU,CAAC,CAAC;EAEzB,MAAMc,OAAO,GAAGtB,OAAO,CAAC,OAAO;IAC7BM,OAAO;IAAEC,UAAU;IAAEC,UAAU;IAAEC,aAAa;IAAEC,aAAa;IAAEC;EACjE,CAAC,CAAC,EAAE,CAACL,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEC,aAAa,EAAEC,aAAa,EAAEC,gBAAgB,CAAC,CAAC;EAEtF,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAGW,OAAS;IAAA,UACpCjB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B;AAAC,GAjCQD,QAAQ;AAAA,KAARA,QAAQ;AAmCjBA,QAAQ,CAACmB,SAAS,GAAG;EACnBlB,QAAQ,EAAEJ,SAAS,CAACuB;AACtB,CAAC,CAACC,UAAU;AAEZ,eAAerB,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}